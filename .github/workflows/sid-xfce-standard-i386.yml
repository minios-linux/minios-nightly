name: sid-xfce-standard-i386

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Clone minios-live Repository
      run: |
        git clone --depth 1 https://github.com/minios-linux/minios-live.git
        cd minios-live

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          debootstrap xorriso genisoimage binutils squashfs-tools \
          grub-pc-bin grub-efi-amd64-bin dosfstools mtools xz-utils zstd \
          curl rsync

    - name: Run build - Debian Sid XFCE Standard i386
      run: |
        cd minios-live
        echo "Starting build for Debian Sid XFCE Standard i386..."
        sudo ./minios-cmd -d sid -a i386 -de xfce -pv standard -kl
        sudo mkdir -p build/output/sid-xfce-standard-i386
        sudo mv build/iso/*.iso build/output/sid-xfce-standard-i386/
        echo "Build completed for Debian Sid XFCE Standard i386."

    - name: Archive build output - Debian Sid XFCE Standard i386
      uses: actions/upload-artifact@v3
      with:
        name: minios-sid-xfce-standard-i386
        path: minios-live/build/output/sid-xfce-standard-i386

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Set Release Tag Name
      id: set_tag
      run: echo "tag_name=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: Create Release with Date
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        repo=${{ github.repository }}
        tag_name=${{ env.tag_name }}
        if ! gh release view "$tag_name" --repo "$repo" >/dev/null 2>&1; then
          gh release create "$tag_name" \
            --title "Build $tag_name" \
            --notes "Release notes for Build $tag_name" \
            --repo "$repo"
        fi

    - name: Upload Release Assets
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        repo=${{ github.repository }}
        tag_name=${{ env.tag_name }}
        for artifact in ./artifacts/*/*; do
          gh release upload "$tag_name" "$artifact" --repo "$repo" --clobber
        done
